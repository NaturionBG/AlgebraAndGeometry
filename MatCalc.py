from sympy import *
from sympy.abc import x, Y


def menu() -> None:
  print('''
* ВСЕ ФУНКЦИИ ВОЗВРАЩАЮТ НЕ РЕШЕНИЕ ЗАДАНИЯ, А КОД, КОТОРЫЙ ЕЁ РЕШАЕТ!

1. Есть функции gaussian_elim, gaussian_elim_parameters (Вряд ли кому-либо нужны) - на вход подайте строковое название заранее созданной
вами матрицы, следуйте дальнейшему алгоритму решения.   

2. Функция MatrixOps - на вход подайте строковые названия двух заранее созданных вами матриц, а также список операций в задании.
Если в задании есть произведение Кронекера - положите в список "kron", в противном случае его можно оставить пустым.    
 
3.Функция MatrixEquations - на вход подайте 2 или 3 строковых названия заранее созданных вами матриц.
От того, сколько значений вы подали, будет зависеть выданное решение.
3 матрицы - A*X*B = C
2 матрицы - A*X = B, X*A = B

4. Функция Deter - на вход подайте 1 или 2 строковых названия заранее созданных вами матриц.
От того, сколько значений вы подали, будет зависеть выданное решение. (См. варианты заданий в МатКальк)

5. Функция BigMatrices - на вход подайте порядок матрицы, верхний левый элемент (a11), правый нижний элемент (ann), 
Если нужно - элементы a12, a22 (Если в вашем варианте их нет, внесите нули, это не повлияет на решение),
Элемент a1n - последний элемент в первом ряду, если в вашем варианте этого значения нет - не вводите это значение!

6. Функция MatrixRows - на вход подайте название заранее созданной вами матрицы, float-значение символа из условия, например, 0.057,
Параметры m, n для матрицы S из условия, затем значение m для матрицы B из условия. Наконец, на вход подайте float-значение числа для 
решения 3-го пункта.

7. Функция ComplexNumbers - на вход подайте степень корня из 1, название заранее созданной вами матрицы.

8. Функция Polynomials - на вход подайте полином вида: x**13 -2*x**11 + x**9 .... (ЭТО ПРИМЕР!!!)

9. Функция EigenValsAndVects - на вход подайте название заранее созданной вами матрицы.

10. Функция Cartesian - На вход подайте названия трёх заранее созданных вами матриц вида: POINT = Matrix([a, b])       

11. Функция arifm_and_geom_matrix_progression(n: int, a11: float, a1n: float, ann: float). Решает задание
с геом. прогр. в пункте 1) и арифм. прогр. в пункте 2) (Аналог 7.5). Принимаемые аргументы ясны как день
''')